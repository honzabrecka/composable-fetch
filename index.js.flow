// @flow

export type UnaryFn<A, B> = (value: A) => Promise<B> | B

export type UnaryFnP<A, B> = (value: A) => Promise<B>

declare type PipeP = (<
  T1,
  T2,
  T3,
  T4,
  T5,
  T6,
  T7,
  T8,
  T9,
  T10,
  T11,
  T12,
  T13,
  T14,
  T15,
  T16,
  T17,
  T18,
  T19,
  T20,
  T21,
  T22,
  T23,
  T24,
  T25,
  T26,
  T27,
  T28,
  T29,
>(
  t1: UnaryFn<T1, T2>,
  t2: UnaryFn<T2, T3>,
  t3: UnaryFn<T3, T4>,
  t4: UnaryFn<T4, T5>,
  t5: UnaryFn<T5, T6>,
  t6: UnaryFn<T6, T7>,
  t7: UnaryFn<T7, T8>,
  t8: UnaryFn<T8, T9>,
  t9: UnaryFn<T9, T10>,
  t10: UnaryFn<T10, T11>,
  t11: UnaryFn<T11, T12>,
  t12: UnaryFn<T12, T13>,
  t13: UnaryFn<T13, T14>,
  t14: UnaryFn<T14, T15>,
  t15: UnaryFn<T15, T16>,
  t16: UnaryFn<T16, T17>,
  t17: UnaryFn<T17, T18>,
  t18: UnaryFn<T18, T19>,
  t19: UnaryFn<T19, T20>,
  t20: UnaryFn<T20, T21>,
  t21: UnaryFn<T21, T22>,
  t22: UnaryFn<T22, T23>,
  t23: UnaryFn<T23, T24>,
  t24: UnaryFn<T24, T25>,
  t25: UnaryFn<T25, T26>,
  t26: UnaryFn<T26, T27>,
  t27: UnaryFn<T27, T28>,
  t28: UnaryFn<T28, T29>,
) => (value: T1) => UnaryFnP<T1, T29>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
    T24,
    T25,
    T26,
    T27,
    T28,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
    t23: UnaryFn<T23, T24>,
    t24: UnaryFn<T24, T25>,
    t25: UnaryFn<T25, T26>,
    t26: UnaryFn<T26, T27>,
    t27: UnaryFn<T27, T28>,
  ) => (value: T1) => UnaryFnP<T1, T28>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
    T24,
    T25,
    T26,
    T27,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
    t23: UnaryFn<T23, T24>,
    t24: UnaryFn<T24, T25>,
    t25: UnaryFn<T25, T26>,
    t26: UnaryFn<T26, T27>,
  ) => (value: T1) => UnaryFnP<T1, T27>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
    T24,
    T25,
    T26,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
    t23: UnaryFn<T23, T24>,
    t24: UnaryFn<T24, T25>,
    t25: UnaryFn<T25, T26>,
  ) => (value: T1) => UnaryFnP<T1, T26>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
    T24,
    T25,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
    t23: UnaryFn<T23, T24>,
    t24: UnaryFn<T24, T25>,
  ) => (value: T1) => UnaryFnP<T1, T25>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
    T24,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
    t23: UnaryFn<T23, T24>,
  ) => (value: T1) => UnaryFnP<T1, T24>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
    T23,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
    t22: UnaryFn<T22, T23>,
  ) => (value: T1) => UnaryFnP<T1, T23>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
    T22,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
    t21: UnaryFn<T21, T22>,
  ) => (value: T1) => UnaryFnP<T1, T22>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
    T21,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
    t20: UnaryFn<T20, T21>,
  ) => (value: T1) => UnaryFnP<T1, T21>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
    T20,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
    t19: UnaryFn<T19, T20>,
  ) => (value: T1) => UnaryFnP<T1, T20>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
    T19,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
    t18: UnaryFn<T18, T19>,
  ) => (value: T1) => UnaryFnP<T1, T19>) &
  (<
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9,
    T10,
    T11,
    T12,
    T13,
    T14,
    T15,
    T16,
    T17,
    T18,
  >(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
    t17: UnaryFn<T17, T18>,
  ) => (value: T1) => UnaryFnP<T1, T18>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
    t16: UnaryFn<T16, T17>,
  ) => (value: T1) => UnaryFnP<T1, T17>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
    t15: UnaryFn<T15, T16>,
  ) => (value: T1) => UnaryFnP<T1, T16>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
    t14: UnaryFn<T14, T15>,
  ) => (value: T1) => UnaryFnP<T1, T15>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
    t13: UnaryFn<T13, T14>,
  ) => (value: T1) => UnaryFnP<T1, T14>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
    t12: UnaryFn<T12, T13>,
  ) => (value: T1) => UnaryFnP<T1, T13>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
    t11: UnaryFn<T11, T12>,
  ) => (value: T1) => UnaryFnP<T1, T12>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
    t10: UnaryFn<T10, T11>,
  ) => (value: T1) => UnaryFnP<T1, T11>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
    t9: UnaryFn<T9, T10>,
  ) => (value: T1) => UnaryFnP<T1, T10>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8, T9>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
    t8: UnaryFn<T8, T9>,
  ) => (value: T1) => UnaryFnP<T1, T9>) &
  (<T1, T2, T3, T4, T5, T6, T7, T8>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
    t7: UnaryFn<T7, T8>,
  ) => (value: T1) => UnaryFnP<T1, T8>) &
  (<T1, T2, T3, T4, T5, T6, T7>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
    t6: UnaryFn<T6, T7>,
  ) => (value: T1) => UnaryFnP<T1, T7>) &
  (<T1, T2, T3, T4, T5, T6>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
    t5: UnaryFn<T5, T6>,
  ) => (value: T1) => UnaryFnP<T1, T6>) &
  (<T1, T2, T3, T4, T5>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
    t4: UnaryFn<T4, T5>,
  ) => (value: T1) => UnaryFnP<T1, T5>) &
  (<T1, T2, T3, T4>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
    t3: UnaryFn<T3, T4>,
  ) => (value: T1) => UnaryFnP<T1, T4>) &
  (<T1, T2, T3>(
    t1: UnaryFn<T1, T2>,
    t2: UnaryFn<T2, T3>,
  ) => (value: T1) => UnaryFnP<T1, T3>) &
  (<T1, T2>(t1: UnaryFn<T1, T2>) => (value: T1) => UnaryFnP<T1, T2>)

declare export var pipeP: PipeP
// declare export var pipeP: <A, B>(...fns: Function[]) => UnaryFnP<A, B>

declare export var tryCatchP: <A, B>(
  trier: UnaryFnP<A, B>,
  catcher: (err: Error, value: A) => Promise<B>,
) => UnaryFnP<A, B>

export type Encoder<A, B> = (value: A) => B

export type Request = {
  url: string | URL,
  method?: 'GET' | 'POST' | 'PUT' | 'DELETE',
  headers?: { [string]: string },
  body?: any,
  [string]: any,
}

export type DecodedResponse = Response & { data?: any }

export type RetryableFetch = () => Promise<Response>

export type Delay = UnaryFnP<number, void>

export type DelayEffect = (t: number) => any

declare export var delays: {
  constant: (time?: number, f?: DelayEffect) => Delay,
  exponential: (time?: number, f?: DelayEffect) => Delay,
  limited: (max: number, delay: Delay) => Delay,
  linear: (time?: number, f?: DelayEffect) => Delay,
}

export type UnaryFetch = UnaryFnP<Request, Response>

export type BinaryFetch = (url: string | URL, init: any) => Promise<Response>

export type RetryOptions = {
  max?: number,
  delay?: Delay,
  maxTimeout?: number,
}

declare export var checkStatus: (res: Response) => Response

declare export var decodeArrayBufferResponse: (res: Response) => DecodedResponse

declare export var decodeBlobResponse: (res: Response) => DecodedResponse

declare export var decodeFormDataResponse: (res: Response) => DecodedResponse

declare export var decodeJSONResponse: (res: Response) => DecodedResponse

declare export var decodeResponse: (res: Response) => DecodedResponse

declare export var decodeTextResponse: (res: Response) => DecodedResponse

declare export var fetch: UnaryFetch

declare export var fetch1: (fetch: BinaryFetch) => UnaryFetch

declare export var logError: (log: Function) => (error: Error) => Promise<void>

declare export var retryable: (
  fetch: UnaryFetch,
) => (req: Request) => RetryableFetch

declare export var retryableFetch: (req: Request) => RetryableFetch

declare export var withBaseUrl: (baseUrl: string) => (req: Request) => Request

declare export var withEncodedBody: <A, B>(
  encoder: Encoder<A, B>,
) => (req: Request) => Request

declare export var withHeader: (
  header: string,
  value: string,
) => (req: Request) => Request

declare export var withCredentials: (
  value: 'omit' | 'same-origin' | 'include',
) => (req: Request) => Request

declare export var withRetry: (
  options?: RetryOptions,
) => (fetch: RetryableFetch) => Promise<Response>

declare export var withSafe204: (
  text?: string,
  json?: any,
) => (res: Response) => Response

declare export var withTimeout: (
  timeout: number,
) => (fetch: RetryableFetch) => RetryableFetch

declare export var withClone: (res: Response) => Response

declare export var decodeRetryAfterHeaderValue: (res?: Response) => ?number

declare export var json: (options?: RetryOptions) => Promise<DecodedResponse>

declare export var text: (options?: RetryOptions) => Promise<DecodedResponse>
